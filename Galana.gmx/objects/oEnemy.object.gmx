<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

//Types
types[0] = sEnemy_1
types[1] = sEnemy_2
types[2] = sEnemy_3
types[3] = sEnemy_4
types[4] = sEnemy_6
types[5] = sEnemy_5
types[6] = sEnemy_7
types[7] = sEnemy_8
types[8] = sEnemy_9
type = 1

//Fire Types
ftypes[0] = sEnemy_Fire_1
ftypes[1] = sEnemy_Fire_2
ftypes[2] = sEnemy_Fire_3
ftypes[3] = sEnemy_Fire_4
ftypes[4] = sEnemy_Fire_6
ftypes[5] = sEnemy_Fire_5
ftypes[6] = sEnemy_Fire_7
ftypes[7] = sEnemy_Fire_8
ftypes[8] = sEnemy_Fire_8

//Sprite Override
s_override = false
s_over = undefined
s_index = undefined

//State Control
state = "default"

//Life
hth = 1 //how many hits to kill?
life = 0 //how long alive
die_of_old_age = 10*room_speed
has_died = false

//Statuses
is_invincible = false
bonus_health = 2
got_extra_health = false
giving_health = noone
health_given = 0
health_redeemed = false

//Anim
image_speed = .1

//Shooting  (T1)
bullet_offset_x = 7
bullet_offset_y = 20
bullet_speed = 7
bullet_which = -1
bullet_timer = 0; m_bullet_timer = 10

//Diving (T2)
dive_distance = 64
dive_speed = 8
dive_give_up = 2*room_speed
dive_transform_sprite = sEnemy_3_transform
dive_sprite = sEnemy_3_dive

//prefered height
pref_speed = .2
pref_height = 64 + random(32)

//attacking (match x)
attack_target = oPlayer
attack_speed = .03
attack_offset = random_range(-16, 16) //to seperate out enemies

//travellers
mrspd = random_range(1.6, 2.2)

//team
team = TEAM_ENEMY

//camera shake
shake_amount = 5

//seperation
seperation_dist = 20
seperation_force = 5
seed = random(100)

//invinci beams
beam_dist = 0

//fire
fire = instance_create(x, y, oEnemyFire)
fire.stick_to = id
fire.ftypes = ftypes
fire_enabled = true

//spawning
espawn_timer = 0
espawn_timer_m = room_speed
espawn_m = 7
espawned = 0
stay_put = false
stay_put_x = 0

// splitters
slow_roll = 0
has_been_granted_health = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Appear above screen
y = -sprite_height
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chance for extra health
if (random(1) &lt; ehChance[type]) {
    hth += 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Nullify Status

is_invincible = false


if (got_extra_health and !health_redeemed) {
    if (!instance_exists(giving_health)) {
        hth -= bonus_health
        hth = max(1, hth)
        health_redeemed = true
        beam_dist = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Do the AI specified by type

//call ai script with type
scrEnemyAI(type)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fly away if no player
if (!instance_exists(oPlayer)) {
    y += 3 + random(1)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Die if outside screen (except for out of top)

if (x &gt; room_width or x &lt; 0 or y &gt; room_height) {
    instance_destroy()
    scrGiveScore(5)
    
    //if im type 5, explode
    if (type == 5) {
        with (oPlayer) {
            scrTakeDamage(2)
        }
        
        //Do explosion effect
        if (type == ENEMY_EXPLODER) {
            for (i=16;i&lt;room_width;i+=32) {
                scrCreateBigExplosion(i, room_height - 20)
            }
        }
        
        //Play Sound
        scrPlaySound(explosion)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grow Old

life++
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep away from others

//get nearest enemy
with (oEnemy) {
    //are we too close?
    var dist = distance_to_point(other.x, other.y)
    if (dist &lt; seperation_dist) {
    
        //get direction to them
        dir = sign(other.x - x)
        
        //push away from them
        var f = lerp(0.01, .13, 1 - (dist / seperation_dist))
        x = lerp(x, x - (dir * seperation_force), f)
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Are we dead?
if (hth &lt;= 0 and !has_died) {
    // Dont do this twice
    has_died = true

    //audio
    scrPlaySound(enemy_hit)

    //explode
    instance_create(x, y, oExplosion)
        
    //die
    instance_destroy()

    //award score
    scrGiveScore(10)
    
    //spawn next enemy! Keep up the pace
    with(pWave){event_user(0)}
    
    if (type == ENEMY_EXPLODER or type == ENEMY_SPAWNER) {
        scrCreateBigExplosion(x, y)
        scrPlaySound(explosion)
        with (oEnemy) {
            if (distance_to_object(other) &lt; 45) {
                hth = 0
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rolling
image_angle += slow_roll
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Grant extra health
if not has_been_granted_health and type == ENEMY_SPLITTER {
    has_been_granted_health = true
    hth += 1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stay Put (if nec)
if (stay_put) {
    x = lerp(x, stay_put_x, .4)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Explode &amp; Die

if (not is_invincible) {
    if (other.team != team) {
        //take damage
        hth--
        
        // take explosion damage?
        if (other.is_missile) {
           with (other) {
            scrCreateBigExplosionOnUs()
            scrPlaySound(explosion)
           }
            hth--
            with (oEnemy) {
                if other != self {
                    if distance_to_object(other) &lt; 50 {
                        hth -= 2
                    }
                }
            }
        }
        
        //kill them
        with (other) {instance_destroy()}

        //shake &amp; bake!
        scrCameraShake(shake_amount, shake_amount)
        
        //if we didn't die
        if (hth != 0) {
            //block audio
            scrPlaySound(enemy_hit_block)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Invinci Beams
if (type == 3) {
    with (oEnemy) {
        if (type != 3) {
            draw_set_colour(COL_ENEMY_LIGHT)
            if (got_extra_health and giving_health = other) {
            
                /* Properties */
                off = 32
                w = 10
                
                /* Calculate Line w/ Offsets */
                x1 = x
                y1 = y
                x2 = other.x
                y2 = other.y
                d = point_direction(x1, y1, x2, y2)
                xn = lengthdir_x(off, d)
                yn = lengthdir_y(off, d)
                x1 += xn
                y1 += yn
                x2 -= xn
                y2 -= yn
                
                /* Draw part of the line */
                beam_dist = lerp(beam_dist, 1, .17)
                
                //Get Line Stats
                d = point_direction(x2, y2, x1, y1)
                l = point_distance(x2, y2, x1, y1)
                
                //Interpolate to find length
                l *= beam_dist
                x1 = x2 + lengthdir_x(l, d)
                y1 = y2 + lengthdir_y(l, d)
                
                /* Draw Line */ 
                draw_line_width(x1, y1, x2, y2, w)
                draw_circle(x1, y1, w/2, false)
                draw_circle(x2, y2, w/2, false)
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alpha and Blending

//reset image alpha &amp; blend
image_blend = c_white
image_alpha = 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flash (and leave trail and play sound) if explosive
if (type == 5) {

    //flash
    if (current_time % 4 == 0) {
        //colour
        image_blend = c_red
        
        //sound
        if (choose(true, false)) {
            scrPlaySound(explosive_warning)
        }
    }

    
    //draw trail
    var w = 5
    draw_line_width_colour(x - 1, -2, x - 1, y, w, COL_ENEMY_DARK, COL_ENEMY_LIGHT)
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Correct Type

//get sprite to draw
var spr = types[type]

//should it be overriden? (i.e diving)
if (s_override) {
    // Override sprite
    spr = s_over
    
    // Override index
    if (s_index != undefined) {
        image_index = s_index
    }
}

//draw type
draw_sprite_ext(spr, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw health circle

if (hth &gt; 1) {
    //get stats
    var col = COL_ENEMY_DARK
    
    //should it flash?
    if (current_time % 4 == 0) {
        col = COL_ENEMY_LIGHT
    }
    
    scrDrawHealthRing(x, y, 21, 10, 3+(hth-2), 3+(hth-2), (current_time) / 4, 360, 1, col)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
