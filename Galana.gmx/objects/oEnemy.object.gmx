<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sEnemy_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize

//Types
types[0] = sEnemy_1
types[1] = sEnemy_2
types[2] = sEnemy_3
types[3] = sEnemy_4
types[4] = sEnemy_3
type = 1

//Fire Types
ftypes[0] = sEnemy_Fire_1
ftypes[1] = sEnemy_Fire_2
ftypes[2] = sEnemy_Fire_3
ftypes[3] = sEnemy_Fire_4
ftypes[4] = sEnemy_Fire_3

//Sprite Override
s_override = false
s_over = undefined

//State Control
state = "default"

//Life
hth = 1 //how many hits to kill?
life = 0 //how long alive
die_of_old_age = 10*room_speed

//Statuses
is_invincible = false

//Anim
image_speed = .1

//Shooting  (T1)
bullet_offset_x = 7
bullet_offset_y = 20
bullet_speed = 7
bullet_which = -1
bullet_timer = 0; m_bullet_timer = 10

//Diving (T2)
dive_distance = 64
dive_speed = 8
dive_give_up = 2*room_speed
dive_transform_sprite = sEnemy_3_transform
dive_sprite = sEnemy_3_dive

//prefered height
pref_speed = .2
pref_height = 64 + random(32)

//attacking (match x)
attack_target = oPlayer
attack_speed = .03
attack_offset = random_range(-16, 16) //to seperate out enemies

//team
team = TEAM_ENEMY

//camera shake
shake_amount = 15

//seperation
seperation_dist = 15
seperation_force = 5

//invinci beams
beam_alpha_decrease = .05
beam_colour = COL_ENEMY_PURPLE_DARK
beam_roffset = 0
beam_yoffset = -5
beam_width = 5

//fire
fire = instance_create(x, y, oEnemyFire)
fire.stick_to = id
fire.ftypes = ftypes
fire_enabled = true
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Appear above screen
y = -sprite_height
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Chance for extra health
if (random(1) &lt; ehChance[type]) {
    hth += 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Nullify Status

is_invincible = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Do the AI specified by type

//call ai script with type
scrEnemyAI(type)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fly away if no player
if (!instance_exists(oPlayer)) {
    y += 3 + random(1)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Die if outside screen (except for out of top)

if (x &gt; room_width or x &lt; 0 or y &gt; room_height) {
    instance_destroy()
    scrGiveScore(5)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grow Old

life++
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keep away from others

//get nearest enemy
var ne = instance_nearest(x, y, oEnemy)

//if 'ne' exists
if (instance_exists(ne)) {

    //are we too close?
    if (abs(ne.x - x) &lt; seperation_dist and abs(ne.y - y) &lt; seperation_dist ) {
    
        //get direction to them
        dir = sign(ne.x - x)
        
        //push away from them
        x = lerp(x, x - (dir * seperation_force), .2)
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create Invinci Beams
if (type == 3) {
    with (oEnemy) {
        scrCreateBeam(other, beam_colour, beam_alpha_decrease, beam_width, beam_roffset, beam_yoffset)
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Explode &amp; Die

if (not is_invincible) {
    if (other.team != team) {
        //take damage
        hth--
        
        //kill them
        with (other) {instance_destroy()}

        //shake &amp; bake!
        scrCameraShake(shake_amount, shake_amount)
        
        //are we dead?
        if (hth &lt;= 0) {
            //audio
            scrPlaySound(enemy_hit)
        
            //explode
            instance_create(x, y, oExplosion)
            
            //die
            instance_destroy()
        
            //award score    
            scrGiveScore(10)
        } else {
            //block audio
            scrPlaySound(enemy_hit_block)
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Alpha and Blending

//reset image alpha &amp; blend
image_blend = c_white
image_alpha = 1
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Correct Type

//get sprite to draw
var spr = types[type]

//should it be overriden? (i.e diving)
if (s_override) {
    spr = s_over
}

//draw type
draw_sprite_ext(spr, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw health circle

if (hth &gt; 1) {
    //get stats
    var col = COL_ENEMY_DARK
    
    //should it flash?
    if (current_time % 4 == 0) {
        col = COL_ENEMY_LIGHT
    }
    
    scrDrawHealthRing(x, y, 21, 10, 3+(hth-2), 3+(hth-2), (current_time) / 4, 360, 1, col)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
